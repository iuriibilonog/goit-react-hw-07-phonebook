{"version":3,"sources":["components/Contacts/Contacts.module.css","App.module.css","components/FilterField/FilterField.module.css","components/Loader/Loader.module.css","components/ContactsForm/ContactsForm.module.css","redux/contacts/contacts-type.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-redusers.js","redux/store.js","redux/contacts/contacts-operation.js","components/ContactsForm/ContactsForm.jsx","utils/helter.js","redux/contacts/contacts-selectors.js","components/Loader/Loader.jsx","components/Contacts/Contacts.jsx","components/FilterField/FilterField.jsx","App.js","index.js"],"names":["module","exports","getContactRequest","createAction","getContactSuccsess","getContactError","addContactRequest","addContactSuccsess","addContactError","deleteContactRequest","deleteContactSuccsess","deleteContactError","changeFilter","types","items","createReducer","_","action","payload","state","filter","contact","id","contactsReduser","combineReducers","loadingReducer","rootReducer","contacts","isLoading","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","axios","defaults","baseURL","ContactsForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handlerOnChange","e","target","value","reset","onSubmit","verifyContact","preventDefault","map","item","toLowerCase","includes","alert","post","then","data","catch","error","addContact","className","s","form","inputTitle","inputField","type","pattern","title","required","onChange","addContactBtn","getItems","getFilter","getLoading","Loading","loader","color","height","width","timeout","Contacts","useEffect","get","NormalizeFilter","contactsArr","contactsList","Loader","contactItem","contactsName","contactsNumber","delBtn","onClick","delete","deleteContact","FilterField","filterTitle","filterInput","contactsActions","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7488f35f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__1dtvW\",\"contactItem\":\"Contacts_contactItem__x4h94\",\"contactsName\":\"Contacts_contactsName__F1fFJ\",\"contactsNumber\":\"Contacts_contactsNumber__2NuCS\",\"delBtn\":\"Contacts_delBtn__1tclV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__37MS0\",\"title\":\"App_title__WN9g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"FilterField_filterTitle__1JDaG\",\"filterInput\":\"FilterField_filterInput__13tg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1-5ek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__AaD84\",\"inputTitle\":\"ContactsForm_inputTitle__9WRud\",\"inputField\":\"ContactsForm_inputField__2fGy2\",\"addContactBtn\":\"ContactsForm_addContactBtn__3IRnC\"};","export default {\r\n  ADD: \"contacts/add\",\r\n  DELETE: \"contacts/delete\",\r\n  CHANGE_FILTER: \"contacts/changeFilter\",\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport types from \"./contacts-type\";\r\nimport { v4 } from \"uuid\";\r\n\r\n// const addNewContact = createAction(types.ADD, ({ name, number }) => ({\r\n//   payload: {\r\n//     id: v4(),\r\n//     name: name,\r\n//     number: number,\r\n//   },\r\n// }));\r\n\r\nexport const getContactRequest = createAction(\"contacts/getContactRequest\");\r\nexport const getContactSuccsess = createAction(\"contacts/getContactSuccsess\");\r\nexport const getContactError = createAction(\"contacts/getContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccsess = createAction(\"contacts/addContactSuccsess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccsess = createAction(\r\n  \"contacts/deleteContactSuccsess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst changeFilter = createAction(types.CHANGE_FILTER);\r\n\r\nexport default { changeFilter };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport types from \"./contacts-type\";\r\nimport {\r\n  getContactRequest,\r\n  getContactSuccsess,\r\n  getContactError,\r\n  addContactRequest,\r\n  addContactSuccsess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccsess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [getContactSuccsess]: (_, action) => [...action.payload],\r\n  [addContactSuccsess]: (state, action) => [action.payload, ...state],\r\n\r\n  [deleteContactSuccsess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [types.CHANGE_FILTER]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReduser = combineReducers({\r\n  items: items,\r\n  filter: filter,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [getContactRequest]: () => true,\r\n  [getContactSuccsess]: () => false,\r\n  [getContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccsess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccsess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduser,\r\n  isLoading: loadingReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import rootReducer from \"./contacts/contacts-redusers\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n","import axios from \"axios\";\r\nimport {\r\n  getContactRequest,\r\n  getContactSuccsess,\r\n  getContactError,\r\n  addContactRequest,\r\n  addContactSuccsess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccsess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004/\";\r\n\r\nexport const getContacts = () => (dispatch) => {\r\n  dispatch(getContactRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(getContactSuccsess(data)))\r\n    .catch((error) => dispatch(getContactError(error)));\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const items = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", items)\r\n      .then(({ data }) => dispatch(addContactSuccsess(data)))\r\n      .catch((error) => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccsess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact}  from '../../redux/contacts/contacts-operation';\nimport PropTypes from 'prop-types';\nimport s from './ContactsForm.module.css'\nimport { isAlreadyHasContact } from '../../utils/helter';\n\n\nfunction ContactsForm() {\n\n  const dispatch = useDispatch();\n  const { items } = useSelector((state) => state.contacts)\n  \n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handlerOnChange = (e) => {\n    const { name, value } = e.target\n    \n    switch (name) {\n      case 'name': return setName(value);\n      case 'number': return setNumber(value);\n      default: return;\n    }\n  }\n\n  const hendlerOnSubmit = (e) => {\n    e.preventDefault();\n    isAlreadyHasContact(items, name) ? alert(`${name} is already in contacts.`) : dispatch(addContact({ name, number }))\n    \n    reset()\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('')\n  }\n\n\n\n  \n    return (\n      <form onSubmit={hendlerOnSubmit} className={s.form}>\n        <label className={s.inputTitle}> Name\n          <input className={s.inputField}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handlerOnChange}\n          />\n        </label>\n\n        <label className={s.inputTitle}> Number\n          <input className={s.inputField}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handlerOnChange}\n          />\n        </label>\n\n        <button className={s.addContactBtn} type='submit'>Add Contact</button>\n      </form>\n    )\n  }\n\n\nContactsForm.propTypes = {\n    addNewContact: PropTypes.func\n}\n  \n\n\nexport default ContactsForm;","export const isAlreadyHasContact = (contacts, verifyContact) => {\r\n  const contactsNames = contacts.map((item) => item.name.toLowerCase());\r\n\r\n  return contactsNames.includes(verifyContact.toLowerCase());\r\n};\r\n","export const getItems = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getLoading = (state) => state.isLoading;\r\n","import Loader from \"react-loader-spinner\";\nimport s from './Loader.module.css';\n\nconst Loading = () => {\n  return (\n    <Loader className={s.loader}\n      type=\"Audio\"\n      color=\"#00BFFF\"\n      height={50}\n      width={50}\n      timeout={5000}\n      \n      />\n  )\n}\n\nexport default Loading;\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, getContacts } from '../../redux/contacts/contacts-operation';\nimport { getItems, getFilter, getLoading } from '../../redux/contacts/contacts-selectors';\nimport { useEffect } from 'react';\nimport Loader from '../../components/Loader';\n\n\nconst Contacts = () => {\n  \n  const dispatch = useDispatch();\n\n  const items = useSelector(getItems)\n  const filter = useSelector(getFilter)\n  const isLoading = useSelector(getLoading)\n\n  \n  useEffect(() => {\n    dispatch(getContacts())\n    \n  }, [])\n\n  \n  \n  \n  const NormalizeFilter = filter.toLowerCase();\n  \n  const contactsArr = items.filter((item) =>\n  item.name.toLowerCase().includes(NormalizeFilter)\n  );\n  \n  \n\n  return (\n    \n    <ul className={s.contactsList}>\n      {isLoading && <Loader/>}\n      {contactsArr.map(({ name, number, id}) =>\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactsName}> {name}: <span className={s.contactsNumber}>{number}</span></p> \n          <button className={s.delBtn} onClick={()=> dispatch(deleteContact(id))} type=\"button\">Delete</button>\n        </li>)\n      \n      }\n    </ul>\n    \n  )\n}\n\nContacts.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n      \n  ),\n  deleteContact: PropTypes.func\n  \n}\n\nexport default Contacts;\n","import s from './FilterField.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions'; \n\n\nconst FilterField = () => {\n\n  const { filter } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n\n  return (\n    <label className={s.filterTitle}> Find contacts by name\n      <input className={s.filterInput} type=\"text\" value={filter} onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}/>\n    </label>\n  )\n}\n\nFilterField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default FilterField;","import s from \"./App.module.css\";\nimport \"./App.module.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport Contacts from \"./components/Contacts\";\nimport FilterField from \"./components/FilterField\";\n\nfunction App() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactsForm />\n      <h2 className={s.title}>Contacts</h2>\n      <FilterField />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}